//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Ego
{
    [Serializable]
    public class UpperBodyStateMsg : Message
    {
        public const string k_RosMessageName = "ego_msgs/UpperBodyState";
        public override string RosMessageName => k_RosMessageName;

        public double right_meas_neck_shaft;
        public double left_meas_neck_shaft;
        public double[] right_meas_arm_shaft;
        public double[] right_meas_arm_m1;
        public double[] right_meas_arm_m2;
        public double[] right_q_eq;
        public double[] right_q_preset;
        public double[] right_q_tau_link_elastic;
        public double[] right_stiff_link;
        public double[] right_gamma;
        public double[] left_meas_arm_m1;
        public double[] left_meas_arm_m2;
        public double[] left_meas_arm_shaft;
        public double[] left_q_eq;
        public double[] left_q_preset;
        public double[] left_q_tau_link_elastic;
        public double[] left_stiff_link;
        public double[] left_gamma;
        public double right_weight;
        public double left_weight;

        public UpperBodyStateMsg()
        {
            this.right_meas_neck_shaft = 0.0;
            this.left_meas_neck_shaft = 0.0;
            this.right_meas_arm_shaft = new double[0];
            this.right_meas_arm_m1 = new double[0];
            this.right_meas_arm_m2 = new double[0];
            this.right_q_eq = new double[0];
            this.right_q_preset = new double[0];
            this.right_q_tau_link_elastic = new double[0];
            this.right_stiff_link = new double[0];
            this.right_gamma = new double[0];
            this.left_meas_arm_m1 = new double[0];
            this.left_meas_arm_m2 = new double[0];
            this.left_meas_arm_shaft = new double[0];
            this.left_q_eq = new double[0];
            this.left_q_preset = new double[0];
            this.left_q_tau_link_elastic = new double[0];
            this.left_stiff_link = new double[0];
            this.left_gamma = new double[0];
            this.right_weight = 0.0;
            this.left_weight = 0.0;
        }

        public UpperBodyStateMsg(double right_meas_neck_shaft, double left_meas_neck_shaft, double[] right_meas_arm_shaft, double[] right_meas_arm_m1, double[] right_meas_arm_m2, double[] right_q_eq, double[] right_q_preset, double[] right_q_tau_link_elastic, double[] right_stiff_link, double[] right_gamma, double[] left_meas_arm_m1, double[] left_meas_arm_m2, double[] left_meas_arm_shaft, double[] left_q_eq, double[] left_q_preset, double[] left_q_tau_link_elastic, double[] left_stiff_link, double[] left_gamma, double right_weight, double left_weight)
        {
            this.right_meas_neck_shaft = right_meas_neck_shaft;
            this.left_meas_neck_shaft = left_meas_neck_shaft;
            this.right_meas_arm_shaft = right_meas_arm_shaft;
            this.right_meas_arm_m1 = right_meas_arm_m1;
            this.right_meas_arm_m2 = right_meas_arm_m2;
            this.right_q_eq = right_q_eq;
            this.right_q_preset = right_q_preset;
            this.right_q_tau_link_elastic = right_q_tau_link_elastic;
            this.right_stiff_link = right_stiff_link;
            this.right_gamma = right_gamma;
            this.left_meas_arm_m1 = left_meas_arm_m1;
            this.left_meas_arm_m2 = left_meas_arm_m2;
            this.left_meas_arm_shaft = left_meas_arm_shaft;
            this.left_q_eq = left_q_eq;
            this.left_q_preset = left_q_preset;
            this.left_q_tau_link_elastic = left_q_tau_link_elastic;
            this.left_stiff_link = left_stiff_link;
            this.left_gamma = left_gamma;
            this.right_weight = right_weight;
            this.left_weight = left_weight;
        }

        public static UpperBodyStateMsg Deserialize(MessageDeserializer deserializer) => new UpperBodyStateMsg(deserializer);

        private UpperBodyStateMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.right_meas_neck_shaft);
            deserializer.Read(out this.left_meas_neck_shaft);
            deserializer.Read(out this.right_meas_arm_shaft, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.right_meas_arm_m1, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.right_meas_arm_m2, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.right_q_eq, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.right_q_preset, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.right_q_tau_link_elastic, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.right_stiff_link, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.right_gamma, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.left_meas_arm_m1, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.left_meas_arm_m2, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.left_meas_arm_shaft, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.left_q_eq, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.left_q_preset, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.left_q_tau_link_elastic, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.left_stiff_link, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.left_gamma, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.right_weight);
            deserializer.Read(out this.left_weight);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.right_meas_neck_shaft);
            serializer.Write(this.left_meas_neck_shaft);
            serializer.WriteLength(this.right_meas_arm_shaft);
            serializer.Write(this.right_meas_arm_shaft);
            serializer.WriteLength(this.right_meas_arm_m1);
            serializer.Write(this.right_meas_arm_m1);
            serializer.WriteLength(this.right_meas_arm_m2);
            serializer.Write(this.right_meas_arm_m2);
            serializer.WriteLength(this.right_q_eq);
            serializer.Write(this.right_q_eq);
            serializer.WriteLength(this.right_q_preset);
            serializer.Write(this.right_q_preset);
            serializer.WriteLength(this.right_q_tau_link_elastic);
            serializer.Write(this.right_q_tau_link_elastic);
            serializer.WriteLength(this.right_stiff_link);
            serializer.Write(this.right_stiff_link);
            serializer.WriteLength(this.right_gamma);
            serializer.Write(this.right_gamma);
            serializer.WriteLength(this.left_meas_arm_m1);
            serializer.Write(this.left_meas_arm_m1);
            serializer.WriteLength(this.left_meas_arm_m2);
            serializer.Write(this.left_meas_arm_m2);
            serializer.WriteLength(this.left_meas_arm_shaft);
            serializer.Write(this.left_meas_arm_shaft);
            serializer.WriteLength(this.left_q_eq);
            serializer.Write(this.left_q_eq);
            serializer.WriteLength(this.left_q_preset);
            serializer.Write(this.left_q_preset);
            serializer.WriteLength(this.left_q_tau_link_elastic);
            serializer.Write(this.left_q_tau_link_elastic);
            serializer.WriteLength(this.left_stiff_link);
            serializer.Write(this.left_stiff_link);
            serializer.WriteLength(this.left_gamma);
            serializer.Write(this.left_gamma);
            serializer.Write(this.right_weight);
            serializer.Write(this.left_weight);
        }

        public override string ToString()
        {
            return "UpperBodyStateMsg: " +
            "\nright_meas_neck_shaft: " + right_meas_neck_shaft.ToString() +
            "\nleft_meas_neck_shaft: " + left_meas_neck_shaft.ToString() +
            "\nright_meas_arm_shaft: " + System.String.Join(", ", right_meas_arm_shaft.ToList()) +
            "\nright_meas_arm_m1: " + System.String.Join(", ", right_meas_arm_m1.ToList()) +
            "\nright_meas_arm_m2: " + System.String.Join(", ", right_meas_arm_m2.ToList()) +
            "\nright_q_eq: " + System.String.Join(", ", right_q_eq.ToList()) +
            "\nright_q_preset: " + System.String.Join(", ", right_q_preset.ToList()) +
            "\nright_q_tau_link_elastic: " + System.String.Join(", ", right_q_tau_link_elastic.ToList()) +
            "\nright_stiff_link: " + System.String.Join(", ", right_stiff_link.ToList()) +
            "\nright_gamma: " + System.String.Join(", ", right_gamma.ToList()) +
            "\nleft_meas_arm_m1: " + System.String.Join(", ", left_meas_arm_m1.ToList()) +
            "\nleft_meas_arm_m2: " + System.String.Join(", ", left_meas_arm_m2.ToList()) +
            "\nleft_meas_arm_shaft: " + System.String.Join(", ", left_meas_arm_shaft.ToList()) +
            "\nleft_q_eq: " + System.String.Join(", ", left_q_eq.ToList()) +
            "\nleft_q_preset: " + System.String.Join(", ", left_q_preset.ToList()) +
            "\nleft_q_tau_link_elastic: " + System.String.Join(", ", left_q_tau_link_elastic.ToList()) +
            "\nleft_stiff_link: " + System.String.Join(", ", left_stiff_link.ToList()) +
            "\nleft_gamma: " + System.String.Join(", ", left_gamma.ToList()) +
            "\nright_weight: " + right_weight.ToString() +
            "\nleft_weight: " + left_weight.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
